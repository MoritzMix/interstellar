{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/data/store.js","webpack:///./src/helper/appEmitter.js","webpack:///./src/components/header.jsx","webpack:///./src/functions/dijkstra.js","webpack:///./src/components/graph.jsx","webpack:///./src/components/content.jsx","webpack:///./src/components/footer.jsx","webpack:///./src/pages/index.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","react_default","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","AppContext","AppProvider","Provider","AppConsumer","appEmitter","EventEmitter","Header","_Component","call","this","changeStart","node","emit","changeEnd","componentDidMount","context","_this","options","dataJson","nodes","className","href","target","lib_default","key","label","color","values","onChange","Component","forwardRef","ref","header_Header","Object","assign","Graph","adjacencyList","addNode","push","index","addEdge","source","cost","weight","addNodes","nodeArr","forEach","i","addEdges","edgeArr","_this2","edge","Subscription_Path","Subscription_Start","Subscription_End","GraphComponent","svgContainer","createRef","state","startNode","endNode","componentWillMount","addListener","drawPath","_this3","container","current","findGroup","document","querySelectorAll","drawChart","payload","setState","el","classList","remove","add","componentWillUnmount","self","edges","start","getPlanetByLabel","end","map","Date","getTime","steps","arr","findIndex","_findPath","timer","times","backtrace","pq","PriorityQueue","collection","_proto2","prototype","enqueue","element","isEmpty","added","length","splice","dequeue","shift","Infinity","_loop","currentNode","neighbor","time","path","lastStep","unshift","findPath","pushNode","iterationCount","window","requestAnimationFrame","animate","planet","querySelector","lane","toFixed","_container$getBoundin","getBoundingClientRect","width","height","svg","d3","append","attr","d","create","simulation","force","distance","strength","link","selectAll","join","enter","circle","text","step","on","x","y","stop","Math","random","_this4","id","style","graph_GraphComponent","Content","background","gridArea","components_graph","Subscription","Footer","startButton","startPathfinding","bind","assertThisInitialized_default","prevState","concat","planets","alignItems","borderTop","display","fontFamily","padding","onClick","IndexPage","value","components_header","content","footer","__webpack_exports__","gatsby_browser_entry_StaticQuery","pages_IndexPage","_1909683104","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape"],"mappings":"oKAaMA,gBAAqBC,IAAMC,cAAc,KAEzCC,EAAc,SAAAC,GAAK,OACvBC,EAAAC,EAAAC,cAACP,EAAmBQ,SAApB,KACG,SAAAC,GACC,OACEL,EAAMM,MACLD,EAAgBL,EAAMO,QAAUF,EAAgBL,EAAMO,OAAOD,MAEtDN,EAAMQ,QAAUR,EAAMS,UAC5BT,EAAMM,KAAON,EAAMM,KAAKA,KAAOD,EAAgBL,EAAMO,OAAOD,MAGvDL,EAAAC,EAAAC,cAAA,uCA4BfJ,EAAYW,UAAY,CACtBJ,KAAMK,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,4BCxDhBC,EAAanB,IAAMC,cAAc,IAE1BmB,EAAcD,EAAWE,SACzBC,EAAcH,EAAWZ,SCDvBgB,EAFI,WAAIC,cCOjBC,sBAEJ,SAAAA,EAAYtB,GAAO,OACjBuB,EAAAC,KAAAC,KAAMzB,IADWyB,yCAInBC,YAAA,SAAYC,GACVP,EAAWQ,KAAK,cAAeD,MAGjCE,UAAA,SAAUF,GACRP,EAAWQ,KAAK,YAAaD,MAG/BG,kBAAA,WACeL,KAAKzB,MAAM+B,WAG1BvB,OAAA,WAAS,IAAAwB,EAAAP,KAEHQ,EAAUR,KAAKzB,MAAM+B,QAAQG,SAASC,MAC1C,OAAOlC,EAAAC,EAAAC,cAAA,UACLiC,UAAU,UAGVnC,EAAAC,EAAAC,cAAA,0BAGAF,EAAAC,EAAAC,cAAA,KAAGkC,KAAK,mDAAmDC,OAAO,UAAlE,kBAEArC,EAAAC,EAAAC,cAAA,OAAKiC,UAAU,oBACbnC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CACEkC,UAAU,QACVH,QAASA,EACTO,IAAKP,EAAQQ,MACbC,MAAM,UACNC,OAAQ,CAAC,CAAEF,MAAO,SAClBG,SAAU,SAAAD,GAAM,OAAIX,EAAKN,YAAYiB,EAAO,GAAGF,UACjDxC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CACEkC,UAAU,MACVH,QAASA,EACTO,IAAKP,EAAQQ,MACbC,MAAM,UACNC,OAAQ,CAAC,CAAEF,MAAO,gBAClBG,SAAU,SAAAD,GAAM,OAAIX,EAAKH,UAAUc,EAAO,GAAGF,gBA5ClCI,cAkDNhD,MAAMiD,WAAW,SAAC9C,EAAO+C,GAAR,OAC9B9C,EAAAC,EAAAC,cAACgB,EAAD,KACG,SAAAY,GAAO,OAAI9B,EAAAC,EAAAC,cAAC6C,EAADC,OAAAC,OAAA,GAAYlD,EAAZ,CAAmB+B,QAASA,EAASgB,IAAKA,2BC7CpDI,aACF,SAAAA,IACI1B,KAAKU,MAAQ,GACbV,KAAK2B,cAAgB,8BAEzBC,QAAA,SAAQ1B,GACJF,KAAKU,MAAMmB,KAAK3B,GAChBF,KAAK2B,cAAczB,EAAK4B,OAAS,MAErCC,QAAA,SAAQC,EAAQnB,EAAQoB,GACpBjC,KAAK2B,cAAcK,GAAQH,KAAK,CAAE3B,KAAMW,EAAQqB,OAAQD,IACxDjC,KAAK2B,cAAcd,GAAQgB,KAAK,CAAE3B,KAAM8B,EAAQE,OAAQD,OAG5DE,SAAA,SAASC,GAAS,IAAA7B,EAAAP,KACdoC,EAAQC,QAAQ,SAACnC,EAAMoC,GAAP,OAAa/B,EAAKqB,QAAQ,CAAEZ,MAAOd,EAAKc,MAAOc,MAAOQ,SAE1EC,SAAA,SAASC,GAAS,IAAAC,EAAAzC,KACdwC,EAAQH,QAAQ,SAAAK,GAAI,OAAID,EAAKV,QAAQW,EAAKV,OAAQU,EAAK7B,OAAQ6B,EAAKT,yBCtBxEU,EAAoB,KACpBC,EAAqB,KACrBC,EAAmB,KAEjBC,cAEF,SAAAA,EAAYvE,GAAO,IAAAgC,EAAA,OACfA,EAAAT,EAAAC,KAAAC,KAAMzB,IAANyB,MACK+C,aAAe3E,IAAM4E,YAC1BzC,EAAK0C,MAAQ,CACTC,UAAW,OACXC,QAAS,eALE5C,sCASnB6C,mBAAA,WAAqB,IAAAX,EAAAzC,KACjB2C,EAAoBhD,EAAW0D,YAAY,cAAe,WACtDZ,EAAKa,gBAIbjD,kBAAA,WAAoB,IAAAkD,EAAAvD,KACVnB,EAAOmB,KAAKzB,MAAM+B,QACpBkD,EAAYxD,KAAK+C,aAAaU,QAGlC,SAASC,EAAU1C,GACf,OAAO2C,SAASC,iBAAT,gBAA0C5C,EAA1C,MAHXhB,KAAK6D,UAAUhF,EAAK4B,SAAU+C,EAAW,GAMzCZ,EAAqBjD,EAAW0D,YAAY,cAAe,SAACS,GACxDP,EAAKQ,SAAS,CAAEb,UAAaY,IAC7BH,SAASC,iBAAiB,4CAA4CvB,QAAQ,SAAA2B,GAAE,OAAIA,EAAGC,UAAUC,OAAO,eAAgB,cAAe,gBACvIR,EAAUI,GAASzB,QAAQ,SAAA2B,GAAE,OAAIA,EAAGC,UAAUE,IAAI,mBAGtDtB,EAAmBlD,EAAW0D,YAAY,YAAa,SAACS,GACpDP,EAAKQ,SAAS,CAAEZ,QAAWW,IAC3BH,SAASC,iBAAiB,0CAA0CvB,QAAQ,SAAA2B,GAAE,OAAIA,EAAGC,UAAUC,OAAO,eAAgB,YAAa,gBACnIR,EAAUI,GAASzB,QAAQ,SAAA2B,GAAE,OAAIA,EAAGC,UAAUE,IAAI,oBAI1DC,qBAAA,WACIzB,EAAkBuB,SAClBtB,EAAmBsB,SACnBrB,EAAiBqB,YAGrBZ,SAAA,WACI,IAAMzE,EAAOmB,KAAKzB,MAAM+B,QAEpB+D,EAAOrE,KACPU,EAAQ7B,EAAK4B,SAASC,MACtB4D,EAAQzF,EAAK4B,SAAS6D,MACtBpB,EAAYlD,KAAKiD,MAAMC,UACvBC,EAAUnD,KAAKiD,MAAME,QAErBoB,EAAQC,EAAiB9D,EAAOwC,GAChCuB,EAAMD,EAAiB9D,EAAOyC,GAE9BuB,IADQ,IAAIC,MAAOC,UACb,IAAIlD,GACVmD,EAAQ,GAGZ,SAASL,EAAiBM,EAAK9D,GAC3B,IAAIc,EAAQgD,EAAIC,UAAU,SAAA7E,GAAI,OAAIA,EAAKc,QAAUA,IACjD,OAAOQ,OAAOC,OAAO,CAAEK,MAAOA,GAASgD,EAAIhD,IAG/C4C,EAAIvC,SAASzB,GACbgE,EAAInC,SAAS+B,GAtBN,IAAAU,EDvBf,SAAkBN,EAAKxB,EAAWC,EAAS8B,GAAO,IAgC1CC,EAAQ,GACRC,EAAY,GACZC,EAAK,IAlCqC,WAG1C,SAAAC,IACIrF,KAAKsF,WAAa,GAJoB,IAAAC,EAAAF,EAAAG,UAAA,OAAAD,EAM1CE,QAAA,SAAQC,GACJ,GAAI1F,KAAK2F,UACL3F,KAAKsF,WAAWzD,KAAK6D,OAClB,CAEH,IADA,IAAIE,GAAQ,EACHtD,EAAI,EAAGA,GAAKtC,KAAKsF,WAAWO,OAAQvD,IACzC,GAAIoD,EAAQ,GAAK1F,KAAKsF,WAAWhD,EAAI,GAAG,GAAI,CACxCtC,KAAKsF,WAAWQ,OAAOxD,EAAI,EAAG,EAAGoD,GACjCE,GAAQ,EACR,MAGHA,GACD5F,KAAKsF,WAAWzD,KAAK6D,KAnBSH,EAwB1CQ,QAAA,WACI,OAAO/F,KAAKsF,WAAWU,SAzBeT,EA2B1CI,QAAA,WACI,OAAmC,IAA3B3F,KAAKsF,WAAWO,QA5BcR,EAAA,IAoC9CH,EAAMhC,EAAUpB,OAAS,EAEzB4C,EAAIhE,MAAM2B,QAAQ,SAAAnC,GACVA,EAAKc,QAAUkC,EAAUlC,QACzBkE,EAAMhF,EAAK4B,OAASmE,OAI5Bb,EAAGK,QAAQ,CAACvC,EAAUpB,MAAO,IAE7B,IA9C8C,IAAAoE,EAAA,WAgD1C,IACIC,EADef,EAAGW,UACS,GAI/BrB,EAAI/C,cAAcwE,GAAa9D,QAAQ,SAAA+D,GAEnC,IAAIC,EAAOnB,EAAMiB,GAAeC,EAASlE,OACrCmE,EAAOnB,EAAMkB,EAASlG,QAEtBgF,EAAMkB,EAASlG,MAAQmG,EACvBlB,EAAUiB,EAASlG,MAAQiG,EAG3Bf,EAAGK,QAAQ,CAACW,EAASlG,KAAMmG,SAhB/BjB,EAAGO,WAAWO,IAuBtB,IAFA,IAAII,EAAO,CAACnD,EAAQrB,OAChByE,EAAWpD,EAAQrB,MAChByE,IAAarD,EAAUpB,OAE1BwE,EAAKE,QAAQrB,EAAUoB,IACvBA,EAAWpB,EAAUoB,GAEzB,MAAO,CAAED,KAAMA,EAAMrE,KAAMiD,EAAM/B,EAAQrB,QC3BhB2E,CAAS/B,EAAKH,EAAOE,GAApC6B,EAxBCtB,EAwBDsB,KAAMrE,EAxBL+C,EAwBK/C,KAERX,EAAMtB,KAAK+C,aAAaU,QAE5BzD,KAAK0G,SAAShG,EAAM4F,EAAK,KAEzB,IAAIK,EAAiB,EACjBrE,EAAI,EA0BRsE,OAAOC,sBAxBP,SAASC,IAEL,GAAIH,EAAiB9B,GAAU,EAAG,CAE9B,IAAIkC,EAASzF,EAAI0F,cAAJ,aAA+BV,EAAKhE,GAApC,aAGT2E,EAAO3F,EAAI0F,cAAJ,iBAAmCV,EAAKhE,EAAI,GAA5C,mBAAiEgE,EAAKhE,GAAtE,OACAhB,EAAI0F,cAAJ,iBAAmCV,EAAKhE,GAAxC,mBAA6DgE,EAAKhE,EAAI,GAAtE,MAEXyE,EAAO9C,UAAUE,IAAI,gBACrB8C,EAAKhD,UAAUE,IAAI,cACnBE,EAAKqC,SAAShG,EAAM4F,EAAKhE,KAEzBA,IAEJqE,IAEIrE,EAAIgE,EAAKT,OACTe,OAAOC,sBAAsBC,GAE7BzC,EAAKqC,SAAS,CAAE1F,MAAK,eAAiBiB,EAAKiF,QAAQ,UAM/DrD,UAAA,SAAUhF,EAAM2E,EAAWqB,GAAO,IAAAsC,EAEJ3D,EAAU4D,wBAA5BC,EAFsBF,EAEtBE,MAAOC,EAFeH,EAEfG,OACTC,EAAMC,IAAUhE,GACjBiE,OAAO,OACPC,KAAK,QAASL,GACdK,KAAK,SAAUJ,GACfI,KAAK,KAAM,WAEVpD,EAAQzF,EAAKyF,MAAMI,IAAI,SAAAiD,GAAC,OAAInG,OAAOoG,OAAOD,KAC1CjH,EAAQ7B,EAAK6B,MAAMgE,IAAI,SAAAiD,GAAC,OAAInG,OAAOoG,OAAOD,KAE1CE,EAAaL,IAAmB9G,GACjCoH,MAAM,OAAQN,IAAalD,GAAOyD,SAAS,KAC3CD,MAAM,SAAUN,MAAmBQ,UAAU,IAC7CF,MAAM,SAAUN,IAAeH,EAAQ,EAAGC,EAAS,IAElDW,EAAOV,EAAIE,OAAO,KACnBS,UAAU,QACVrJ,KAAKyF,GACL6D,KAAK,QAEJjI,EAAOqH,EAAIE,OAAO,KACnBS,UAAU,KACVrJ,KAAK6B,GACL0H,QAAQX,OAAO,KAEdY,EAASnI,EAAKuH,OAAO,UAErBzG,EAAQd,EAAKuH,OAAO,QACrBa,KAAK,SAAAX,GAAC,UAAQA,EAAE3G,MAAV,MACN0G,KAAK,IAAK,GACVA,KAAK,IAAK,GAGXa,EAAO,EACPlE,EAAOrE,KAEX6H,EAAWW,GAAG,OAAQ,WAClBP,EACKP,KAAK,KAAM,SAAAC,GAAC,OAAIA,EAAE3F,OAAOyG,IACzBf,KAAK,KAAM,SAAAC,GAAC,OAAIA,EAAE3F,OAAO0G,IACzBhB,KAAK,KAAM,SAAAC,GAAC,OAAIA,EAAE9G,OAAO4H,IACzBf,KAAK,KAAM,SAAAC,GAAC,OAAIA,EAAE9G,OAAO6H,IAE9BxI,EACKwH,KAAK,YAAa,SAAUC,GACzB,MAAO,aAAeA,EAAEc,EAAI,IAAMd,EAAEe,EAAI,QAGhDH,GAEY1D,IACRgD,EAAWc,OAGXV,EACKP,KAAK,eAAgB,SAAAC,GAAC,OAAKA,EAAE1F,KAAO,IACpCyF,KAAK,SAAU,SAAAC,GAAC,OAAIH,IAAqB,GAAKG,EAAE1F,QAChDyF,KAAK,cAAe,SAAAC,GAAC,OAAIA,EAAE3F,OAAOF,QAClC4F,KAAK,cAAe,SAAAC,GAAC,OAAIA,EAAE9G,OAAOiB,QAEvC5B,EACKwH,KAAK,UAAW,SAACC,EAAGrF,GAAJ,SAAaA,IAC7BoF,KAAK,aAAc,SAAAC,GAAC,SAAOA,EAAE3G,QAC7B0G,KAAK,QAAS,SAAAC,GACX,OAAQA,EAAE3G,OACN,KAAKqD,EAAKpB,MAAMC,UACZ,MAAO,oBACX,KAAKmB,EAAKpB,MAAME,QACZ,MAAO,kBACX,QACI,MAAO,WAKvBkF,EACKX,KAAK,IAAK,SAAAC,GAAC,OAAoB,EAAhBiB,KAAKC,WACpBnB,KAAK,OAAQ,SAAAC,GAAC,OAAIH,IAAsBoB,KAAKC,YAElD7H,EACK0G,KAAK,OAAQ,eAK9BhB,SAAA,SAASxG,GACLP,EAAWQ,KAAK,WAAYD,MAGhCnB,OAAA,WAAS,IAAA+J,EAAA9I,KACL,OAAOxB,EAAAC,EAAAC,cAACgB,EAAD,KAAc,kBAAMlB,EAAAC,EAAAC,cAAA,OAAKqK,GAAI,eAAgBzH,IAAKwH,EAAK/F,aAAciG,MAAO,CAAE1B,OAAQ,OAAQD,MAAO,gBArMvFjG,aA2MdhD,MAAMiD,WAAW,SAAC9C,EAAO+C,GAAR,OAC5B9C,EAAAC,EAAAC,cAACgB,EAAD,KACK,SAAAY,GAAO,OAAI9B,EAAAC,EAAAC,cAACuK,EAADzH,OAAAC,OAAA,GAAoBlD,EAApB,CAA2B+B,QAASA,EAASgB,IAAKA,SC7MvD4H,EAZC,kBACd1K,EAAAC,EAAAC,cAAA,WACEsK,MAAO,CAELG,WAAU,UACVC,SAAU,YAGZ5K,EAAAC,EAAAC,cAAC2K,EAAD,yBCTAC,EAAe,KA2DJC,cAvDb,SAAAA,EAAYhL,GAAO,IAAAgC,EAAA,OACjBA,EAAAT,EAAAC,KAAAC,KAAMzB,IAANyB,MACKwJ,YAAcpL,IAAM4E,YACzBzC,EAAKkJ,iBAAmBlJ,EAAKkJ,iBAAiBC,KAAtBC,IAAApJ,IACxBA,EAAK0C,MAAQ,CAAEb,QAAS,IAJP7B,sCAOnB6C,mBAAA,WAAqB,IAAAX,EAAAzC,KACnBsJ,EAAe3J,EAAW0D,YAAY,WAAY,SAACS,GACjDrB,EAAKsB,SAAS,SAAA6F,GAAS,MAAK,CAC1BxH,QAAA,GAAAyH,OAAeD,EAAUxH,QAAzB,CAAkC0B,YAKxCM,qBAAA,WACEkF,EAAapF,YAGfuF,iBAAA,WACEzJ,KAAK+D,SAAS,CAAE3B,QAAW,KAC3BzC,EAAWQ,KAAK,cAAeH,KAAKwJ,gBAGtCzK,OAAA,WAGE,IAAI+K,EAAU9J,KAAKiD,MAAMb,QAAQsC,IAAI,SAACxE,EAAMoC,GAC1C,OAAO9D,EAAAC,EAAAC,cAAA,MACLqC,IAAKuB,GAAIpC,EAAKc,SAGlB,OAAOxC,EAAAC,EAAAC,cAAA,UACLsK,MAAO,CACLe,WAAY,WACZZ,WAAU,UACVa,UAAW,oBACX/I,MAAK,UACLgJ,QAAS,OACTC,WAAY,WACZd,SAAU,SACVe,QAAS,SAGX3L,EAAAC,EAAAC,cAAA,UAAQ4C,IAAKtB,KAAKwJ,YAAa7I,UAAU,SAASyJ,QAASpK,KAAKyJ,kBAAhE,OAGAjL,EAAAC,EAAAC,cAAA,MAAIiC,UAAU,cACXmJ,QAlDY1I,aCMfiJ,oGAEJtL,OAAA,WAAS,IACCF,EAASmB,KAAKzB,MAAdM,KACR,OACEL,EAAAC,EAAAC,cAACc,EAAD,CAAa8K,MAAOzL,GAClBL,EAAAC,EAAAC,cAAA,OAAKqK,GAAG,OACNvK,EAAAC,EAAAC,cAAC6L,EAAD,MACA/L,EAAAC,EAAAC,cAAC8L,EAAD,MACAhM,EAAAC,EAAAC,cAAC+L,EAAD,YATcrJ,cAiBTsJ,EAAA,iBAAAnM,GAAK,OAClBC,EAAAC,EAAAC,cAACiM,EAAD,CACE7L,MAAK,aAeLC,OAAQ,SAAAF,GAAI,OAAIL,EAAAC,EAAAC,cAACkM,EAADpJ,OAAAC,OAAA,CAAW5C,KAAMA,GAAUN,KAhB7CM,KAAAgM,0BC7BF,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,0hvFCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAKH,EAIElN,IAAMM,cAAcgN,IAApBlK,OAAAC,OAAA,CACL4J,WACAC,iBACGA,EAAcK,OANV,MAUXR,EAAiBlM,UAAY,CAC3BoM,SAAUnM,IAAU0M,MAAM,CACxBH,SAAUvM,IAAUE,OAAOC,aAC1BA,YAGU8L","file":"component---src-pages-index-jsx-2d475166e55609a01752.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\";\n\nconst AppContext = React.createContext({});\n\nexport const AppProvider = AppContext.Provider;\nexport const AppConsumer = AppContext.Consumer;","import { EventEmitter } from 'fbemitter'\n\nconst appEmitter = new EventEmitter()\n\nexport default appEmitter","import React, { Component } from 'react';\n\nimport Select from \"react-dropdown-select\";\n\nimport { AppConsumer } from \"../data/store\"\nimport appEmitter from \"../helper/appEmitter\"\n\nimport \"./header.css\"\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  changeStart(node) {\n    appEmitter.emit('changeStart', node);\n  }\n\n  changeEnd(node) {\n    appEmitter.emit('changeEnd', node);\n  }\n\n  componentDidMount() {\n    const data = this.props.context;\n  }\n\n  render() {\n\n    let options = this.props.context.dataJson.nodes;\n    return <header\n      className=\"header\"\n\n    >\n      <h1>\n        Interstellar\n      </h1>\n      <a href=\"https://github.com/MoritzMix/interstellar-source\" target=\"_blank\">von Moritz Mix</a>\n\n      <div className=\"select-container\">\n        <Select\n          className=\"start\"\n          options={options}\n          key={options.label}\n          color=\"#6eab1b\"\n          values={[{ label: \"Erde\" }]}\n          onChange={values => this.changeStart(values[0].label)} />\n        <Select\n          className=\"end\"\n          options={options}\n          key={options.label}\n          color=\"#6eab1b\"\n          values={[{ label: \"b3-r7-r4nd7\" }]}\n          onChange={values => this.changeEnd(values[0].label)} />\n      </div>\n    </header>\n  }\n}\n\nexport default React.forwardRef((props, ref) => (\n  <AppConsumer>\n    {context => <Header {...props} context={context} ref={ref} />}\n  </AppConsumer>\n));","\n\n//map.addNode(\"Insomnia Cookies\");\n//map.addEdge(\"Fullstack\", \"Starbucks\", 6);\n\n/*\n\nGraph.nodes[Graph.edges[i].source] \n Graph.nodes[Graph.edges[i].target] \n Graph.edges[i].cost \n\n*/\n\n//node = {label: \"Erde\"}\n//edge = {cost: , source: index, target: index}\n\nclass Graph {\n    constructor() {\n        this.nodes = [];\n        this.adjacencyList = {};\n    }\n    addNode(node) {\n        this.nodes.push(node);\n        this.adjacencyList[node.index] = [];\n    }\n    addEdge(source, target, cost) {\n        this.adjacencyList[source].push({ node: target, weight: cost });\n        this.adjacencyList[target].push({ node: source, weight: cost });\n    }\n\n    addNodes(nodeArr) {\n        nodeArr.forEach((node, i) => this.addNode({ label: node.label, index: i }))\n    }\n    addEdges(edgeArr) {\n        edgeArr.forEach(edge => this.addEdge(edge.source, edge.target, edge.cost))\n    }\n}\n\nfunction findPath(map, startNode, endNode, timer) {\n\n    class PriorityQueue {\n        constructor() {\n            this.collection = [];\n        }\n        enqueue(element) {\n            if (this.isEmpty()) {\n                this.collection.push(element);\n            } else {\n                let added = false;\n                for (let i = 1; i <= this.collection.length; i++) {\n                    if (element[1] < this.collection[i - 1][1]) {\n                        this.collection.splice(i - 1, 0, element);\n                        added = true;\n                        break;\n                    }\n                }\n                if (!added) {\n                    this.collection.push(element);\n                }\n            }\n        };\n\n        dequeue() {\n            return this.collection.shift();\n        };\n        isEmpty() {\n            return (this.collection.length === 0)\n        };\n    }\n\n    let times = {};\n    let backtrace = {};\n    let pq = new PriorityQueue();\n\n    times[startNode.index] = 0;\n\n    map.nodes.forEach(node => {\n        if (node.label !== startNode.label) {\n            times[node.index] = Infinity\n        }\n    });\n\n    pq.enqueue([startNode.index, 0]);\n\n    while (!pq.isEmpty()) {\n\n        let shortestStep = pq.dequeue();\n        let currentNode = shortestStep[0];\n\n        //console.log(JSON.parse(JSON.stringify(shortestStep)))\n\n        map.adjacencyList[currentNode].forEach(neighbor => {\n\n            let time = times[currentNode] + neighbor.weight;\n            if (time < times[neighbor.node]) {\n\n                times[neighbor.node] = time;\n                backtrace[neighbor.node] = currentNode;\n                //  console.log('+'+currentNode)\n                //console.log(JSON.parse(JSON.stringify(backtrace)))\n                pq.enqueue([neighbor.node, time]);\n            }\n        });\n    }\n\n    let path = [endNode.index];\n    let lastStep = endNode.index;\n    while (lastStep !== startNode.index) {\n\n        path.unshift(backtrace[lastStep])\n        lastStep = backtrace[lastStep]\n    }\n    return { path: path, cost: times[endNode.index] };\n}\n\nexport { Graph, findPath };","import React, { Component } from 'react';\n\nimport * as d3 from \"d3\";\n\nimport { AppConsumer } from \"../data/store\"\nimport appEmitter from \"../helper/appEmitter\"\nimport { Graph, findPath } from \"../functions/dijkstra\"\n\n\nimport \"./graph.css\"\n\n\nlet Subscription_Path = null,\n    Subscription_Start = null,\n    Subscription_End = null;\n\nclass GraphComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.svgContainer = React.createRef();\n        this.state = {\n            startNode: \"Erde\",\n            endNode: \"b3-r7-r4nd7\"\n        }\n    }\n\n    componentWillMount() {\n        Subscription_Path = appEmitter.addListener('startButton', () => {\n            this.drawPath();\n        });\n    }\n\n    componentDidMount() {\n        const data = this.props.context;\n        let container = this.svgContainer.current\n        this.drawChart(data.dataJson, container, 1);\n\n        function findGroup(label) {\n            return document.querySelectorAll(`[data-label=\"${label}\"]`)\n        }\n\n        Subscription_Start = appEmitter.addListener('changeStart', (payload) => {\n            this.setState({ \"startNode\": payload });\n            document.querySelectorAll(\".activePlanet, .startPlanet, .activeLane\").forEach(el => el.classList.remove(\"activePlanet\", \"startPlanet\", \"activeLane\"));\n            findGroup(payload).forEach(el => el.classList.add(\"startPlanet\"));\n        });\n\n        Subscription_End = appEmitter.addListener('changeEnd', (payload) => {\n            this.setState({ \"endNode\": payload });\n            document.querySelectorAll(\".activePlanet, .endPlanet, .activeLane\").forEach(el => el.classList.remove(\"activePlanet\", \"endPlanet\", \"activeLane\"));\n            findGroup(payload).forEach(el => el.classList.add(\"endPlanet\"));\n        });\n    }\n\n    componentWillUnmount() {\n        Subscription_Path.remove();\n        Subscription_Start.remove();\n        Subscription_End.remove();\n    }\n\n    drawPath() {\n        const data = this.props.context;\n\n        let self = this,\n            nodes = data.dataJson.nodes,\n            edges = data.dataJson.edges,\n            startNode = this.state.startNode,\n            endNode = this.state.endNode,\n\n            start = getPlanetByLabel(nodes, startNode),\n            end = getPlanetByLabel(nodes, endNode),\n            timer = new Date().getTime(),\n            map = new Graph(),\n            steps = 1200 / 60;   // 600ms / 60fps \n\n\n        function getPlanetByLabel(arr, label) {\n            let index = arr.findIndex(node => node.label === label);\n            return Object.assign({ index: index }, arr[index]);\n        }\n\n        map.addNodes(nodes);\n        map.addEdges(edges)\n\n        let { path, cost } = findPath(map, start, end, timer);\n\n        let ref = this.svgContainer.current;\n\n        this.pushNode(nodes[path[0]]);\n\n        let iterationCount = 0,\n            i = 1;\n\n        function animate() {\n\n            if (iterationCount % steps === 0) {\n\n                let planet = ref.querySelector(`[data-id=\"${path[i]}\"] circle`),\n\n                    //Daten liegen als gerichteter Graph vor\n                    lane = ref.querySelector(`[data-source=\"${path[i - 1]}\"][data-target=\"${path[i]}\"]`)\n                        || ref.querySelector(`[data-source=\"${path[i]}\"][data-target=\"${path[i - 1]}\"]`);\n\n                planet.classList.add(\"activePlanet\");\n                lane.classList.add(\"activeLane\");\n                self.pushNode(nodes[path[i]]);\n\n                i++;\n            }\n            iterationCount++;\n\n            if (i < path.length) {\n                window.requestAnimationFrame(animate);\n            } else {\n                self.pushNode({ label: `Total Cost: ${cost.toFixed(4)}` });\n            }\n        }\n        window.requestAnimationFrame(animate);\n    }\n\n    drawChart(data, container, steps) {\n\n        const { width, height } = container.getBoundingClientRect();\n        const svg = d3.select(container)\n            .append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .attr(\"id\", \"starmap\");\n\n        const edges = data.edges.map(d => Object.create(d));\n        const nodes = data.nodes.map(d => Object.create(d));\n\n        const simulation = d3.forceSimulation(nodes)\n            .force(\"link\", d3.forceLink(edges).distance(10))\n            .force(\"charge\", d3.forceManyBody().strength(-2))\n            .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n        const link = svg.append(\"g\")\n            .selectAll(\"line\")\n            .data(edges)\n            .join(\"line\");\n\n        const node = svg.append(\"g\")\n            .selectAll(\"g\")\n            .data(nodes)\n            .enter().append(\"g\")\n\n        const circle = node.append(\"circle\");\n\n        const label = node.append(\"text\")\n            .text(d => `*${d.label}*`)\n            .attr('x', 6)\n            .attr('y', 3);\n\n\n        let step = 0,\n            self = this;\n\n        simulation.on(\"tick\", () => {\n            link\n                .attr(\"x1\", d => d.source.x)\n                .attr(\"y1\", d => d.source.y)\n                .attr(\"x2\", d => d.target.x)\n                .attr(\"y2\", d => d.target.y);\n\n            node\n                .attr(\"transform\", function (d) {\n                    return \"translate(\" + d.x + \",\" + d.y + \")\";\n                });\n\n            step++;\n\n            if (step >= steps) {\n                simulation.stop();\n\n                // workaround: add visual effects only after simulation has stopped\n                link\n                    .attr(\"stroke-width\", d => +d.cost / 2)\n                    .attr(\"stroke\", d => d3.interpolateRdYlGn(1 - +d.cost))\n                    .attr(\"data-source\", d => d.source.index)\n                    .attr(\"data-target\", d => d.target.index);\n\n                node\n                    .attr(\"data-id\", (d, i) => `${i}`)\n                    .attr(\"data-label\", d => `${d.label}`)\n                    .attr(\"class\", d => {\n                        switch (d.label) {\n                            case self.state.startNode:\n                                return \"group startPlanet\"\n                            case self.state.endNode:\n                                return \"group endPlanet\"\n                            default:\n                                return \"group\"\n\n                        }\n                    });\n\n                circle\n                    .attr(\"r\", d => Math.random() * 3)\n                    .attr(\"fill\", d => d3.interpolateOranges(Math.random()));\n\n                label\n                    .attr(\"fill\", \"white\");\n            }\n        });\n    }\n\n    pushNode(node) {\n        appEmitter.emit('pushNode', node);\n    }\n\n    render() {\n        return <AppConsumer>{() => <div id={\"svgContainer\"} ref={this.svgContainer} style={{ height: \"100%\", width: \"100%\" }}>\n        </div>}</AppConsumer>;\n    }\n}\n\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        {context => <GraphComponent {...props} context={context} ref={ref} />}\n    </AppConsumer>\n));","import React from \"react\"\n\nimport GraphComponent from \"./graph\"\n\nconst Content = () => (\n  <content\n    style={{\n      // background: `#6C7595`,\n      background: `#1b1b1b`,\n      gridArea: \"content\"\n    }}\n  >\n    <GraphComponent></GraphComponent>\n  </content>\n)\n\nexport default Content\n","import React, { Component } from 'react';\nimport appEmitter from \"../helper/appEmitter\"\n\nlet Subscription = null;\n\nclass Footer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.startButton = React.createRef();\n    this.startPathfinding = this.startPathfinding.bind(this);\n    this.state = { nodeArr: [] }\n  }\n\n  componentWillMount() {\n    Subscription = appEmitter.addListener('pushNode', (payload) => {\n      this.setState(prevState => ({\n        \"nodeArr\": [...prevState.nodeArr, payload]\n      }))\n    });\n  }\n\n  componentWillUnmount() {\n    Subscription.remove();\n  }\n\n  startPathfinding() {\n    this.setState({ \"nodeArr\": [] });\n    appEmitter.emit('startButton', this.startButton);\n  }\n\n  render() {\n    //const { data } = this.props; // add more props here as needed\n    //\n    let planets = this.state.nodeArr.map((node, i) => {\n      return <li\n        key={i}>{node.label}</li>;\n    });\n\n    return <footer\n      style={{\n        alignItems: \"flex-end\",\n        background: `#1b1b1b`,\n        borderTop: \"5px solid #6EAB1B\",\n        color: `#6EAB1B`,\n        display: \"flex\",\n        fontFamily: 'Orbitron',\n        gridArea: \"footer\",\n        padding: \"20px\"\n      }}\n    >\n      <button ref={this.startButton} className=\"button\" onClick={this.startPathfinding}>\n        Go!\n    </button>\n      <ul className=\"planetList\">\n        {planets}\n      </ul>\n    </footer>\n  }\n}\n\n\nexport default Footer\n\n/*\n<i className=\"material-icons\">zoom_in</i>\n      <i className=\"material-icons\">zoom_out_map</i>\n      <i className=\"material-icons\">zoom_out</i>\n\n*/","import React, { Component } from 'react';\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"../components/header.jsx\"\nimport Content from \"../components/content.jsx\"\nimport Footer from \"../components/footer.jsx\"\n\nimport { AppProvider } from \"../data/store\"\n\nimport \"./layout.css\"\n\nclass IndexPage extends Component {\n  //state = { name: 'Spyna' } { data } = this.props\n  render() {\n    const { data } = this.props; // add more props here as needed\n    return (\n      <AppProvider value={data}>\n        <div id=\"App\">\n          <Header></Header>\n          <Content></Content>\n          <Footer></Footer>\n        </div>\n      </AppProvider>\n    )\n  }\n}\n//export default IndexPage\n\nexport default props => (\n  <StaticQuery\n    query={\n      graphql`\n      query {\n          dataJson {\n              nodes {\n                  label\n              }\n              edges {\n                  source\n                  target\n                  cost  \n              }\n          }\n      }`\n    }\n    render={data => <IndexPage data={data} {...props} />}\n  />\n);\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}