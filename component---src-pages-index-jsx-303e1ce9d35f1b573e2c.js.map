{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/data/store.js","webpack:///./src/components/header.jsx","webpack:///./src/helper/appEmitter.js","webpack:///./src/functions/dijkstra.js","webpack:///./src/components/graph.jsx","webpack:///./src/components/content.jsx","webpack:///./src/components/footer.jsx","webpack:///./src/pages/index.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","react_default","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","AppContext","AppProvider","Provider","AppConsumer","Header","_ref","siteTitle","style","alignItems","background","borderBottom","color","display","fontFamily","gridArea","padding","margin","fontSize","marginLeft","defaultProps","appEmitter","EventEmitter","Graph","this","nodes","adjacencyList","addNode","node","push","index","addEdge","source","target","cost","weight","addNodes","nodeArr","_this","forEach","i","label","addEdges","edgeArr","_this2","edge","Subscription","endNode","GraphComponent","_Component","call","svgContainer","createRef","context","componentWillMount","addListener","payload","drawPath","console","log","componentDidMount","container","current","drawChart","dataJson","componentWillUnmount","remove","_this3","edges","start","getPlanetByLabel","end","timer","Date","getTime","map","arr","findIndex","Object","assign","_findPath","startNode","times","backtrace","pq","PriorityQueue","collection","_proto2","prototype","enqueue","element","isEmpty","added","length","splice","dequeue","shift","Infinity","_loop","currentNode","neighbor","time","path","lastStep","unshift","findPath","ref","planets","querySelectorAll","lanes","el","setAttribute","pushNode","setTimeout","planet","querySelector","lane","steps","d3","scaleExtent","on","currentTransform","transform","svg","attr","_container$getBoundin","getBoundingClientRect","width","height","append","d","create","simulation","force","distance","strength","link","selectAll","join","enter","circle","step","text","x","y","stop","Math","random","emit","_this4","id","Component","forwardRef","graph_GraphComponent","Content","graph","Footer","startButton","startPathfinding","bind","assertThisInitialized_default","state","setState","prevState","concat","key","borderTop","className","onClick","IndexPage","value","header","content","footer","__webpack_exports__","gatsby_browser_entry_StaticQuery","pages_IndexPage","_1909683104","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape"],"mappings":"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","file":"component---src-pages-index-jsx-303e1ce9d35f1b573e2c.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\";\n\nconst AppContext = React.createContext({});\n\nexport const AppProvider = AppContext.Provider;\nexport const AppConsumer = AppContext.Consumer;","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport AppConsumer from \"../data/store\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      alignItems: \"flex-end\",\n      background: `#1b1b1b`,\n      borderBottom: \"5px solid #6EAB1B\",\n      color: `#6EAB1B`,\n      display: \"flex\",\n      fontFamily: 'Orbitron',\n      gridArea: \"header\",\n      padding: \"20px\"\n    }}\n  >\n      <h1 style={{ margin: 0 ,fontSize: \"50px\"}}>\n       Interstellar\n      </h1>\n      <p style={{\n      marginLeft: \"10px\"\n    }}>von Moritz Mix</p>\n    \n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import { EventEmitter } from 'fbemitter'\n\nconst appEmitter = new EventEmitter()\n\nexport default appEmitter","\n\n//map.addNode(\"Insomnia Cookies\");\n//map.addEdge(\"Fullstack\", \"Starbucks\", 6);\n\n/*\n\nGraph.nodes[Graph.edges[i].source] \n Graph.nodes[Graph.edges[i].target] \n Graph.edges[i].cost \n\n*/\n\n//node = {label: \"Erde\"}\n//edge = {cost: , source: index, target: index}\n\nclass Graph {\n    constructor() {\n        this.nodes = [];\n        this.adjacencyList = {};\n    }\n    addNode(node) {\n        this.nodes.push(node);\n        this.adjacencyList[node.index] = [];\n    }\n    addEdge(source, target, cost) {\n        this.adjacencyList[source].push({ node: target, weight: cost });\n        this.adjacencyList[target].push({ node: source, weight: cost });\n    }\n\n    addNodes(nodeArr) {\n        nodeArr.forEach((node, i) => this.addNode({ label: node.label, index: i }))\n    }\n    addEdges(edgeArr) {\n        edgeArr.forEach(edge => this.addEdge(edge.source, edge.target, edge.cost))\n    }\n}\n\nfunction findPath(map, startNode, endNode, timer) {\n\n    class PriorityQueue {\n        constructor() {\n            this.collection = [];\n        }\n        enqueue(element) {\n            if (this.isEmpty()) {\n                this.collection.push(element);\n            } else {\n                let added = false;\n                for (let i = 1; i <= this.collection.length; i++) {\n                    if (element[1] < this.collection[i - 1][1]) {\n                        this.collection.splice(i - 1, 0, element);\n                        added = true;\n                        break;\n                    }\n                }\n                if (!added) {\n                    this.collection.push(element);\n                }\n            }\n        };\n\n        dequeue() {\n            return this.collection.shift();\n        };\n        isEmpty() {\n            return (this.collection.length === 0)\n        };\n    }\n\n    let times = {};\n    let backtrace = {};\n    let pq = new PriorityQueue();\n\n    times[startNode.index] = 0;\n\n    map.nodes.forEach(node => {\n        if (node.label !== startNode.label) {\n            times[node.index] = Infinity\n        }\n    });\n\n    pq.enqueue([startNode.index, 0]);\n\n    while (!pq.isEmpty()) {\n\n        let shortestStep = pq.dequeue();\n        let currentNode = shortestStep[0];\n\n        //console.log(JSON.parse(JSON.stringify(shortestStep)))\n\n        map.adjacencyList[currentNode].forEach(neighbor => {\n\n            let time = times[currentNode] + neighbor.weight;\n            if (time < times[neighbor.node]) {\n\n                times[neighbor.node] = time;\n                backtrace[neighbor.node] = currentNode;\n                //  console.log('+'+currentNode)\n                //console.log(JSON.parse(JSON.stringify(backtrace)))\n                pq.enqueue([neighbor.node, time]);\n            }\n        });\n    }\n\n    let path = [endNode.index];\n    let lastStep = endNode.index;\n    while (lastStep !== startNode.index) {\n\n        path.unshift(backtrace[lastStep])\n        lastStep = backtrace[lastStep]\n    }\n    console.log(new Date().getTime() - timer)\n    return { path: path, cost: times[endNode.index] };\n}\n\nexport { Graph, findPath };","import React, { Component, useContext } from 'react';\n\nimport * as d3 from \"d3\";\n\nimport { AppConsumer } from \"../data/store\"\nimport appEmitter from \"../helper/appEmitter\"\nimport { Graph, findPath } from \"../functions/dijkstra\"\n\nlet Subscription = null;\n\nconst startNode = \"Erde\";\nconst endNode = \"b3-r7-r4nd7\";\nconst startNodeColor = \"blue\";\nconst endNodeColor = \"#479030\";\n\nclass GraphComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.svgContainer = React.createRef();\n        this.data = this.context;\n    }\n\n    componentWillMount() {\n        Subscription = appEmitter.addListener('startButton', (payload) => {\n            this.drawPath();\n            console.log(payload)\n        });\n    }\n\n    componentDidMount() {\n        const data = this.props.context;\n        let container = this.svgContainer.current\n        this.drawChart(data.dataJson, container, 1);\n\n        console.log(\"context\", this.props.context)\n    }\n\n    componentWillUnmount() {\n        Subscription.remove();\n    }\n\n    drawPath() {\n        const data = this.props.context;\n\n        let nodes = data.dataJson.nodes,\n            edges = data.dataJson.edges,\n            start = getPlanetByLabel(nodes, startNode),\n            end = getPlanetByLabel(nodes, endNode),\n            timer = new Date().getTime(),\n            map = new Graph(),\n            steps = 60 / 300;   // 60fps, 0.3s\n\n        function getPlanetByLabel(arr, label) {\n            let index = arr.findIndex(node => node.label === label);\n            return Object.assign({ index: index }, arr[index]);\n        }\n\n        map.addNodes(nodes);\n        map.addEdges(edges)\n\n        let { path, cost } = findPath(map, start, end, timer);\n\n        let ref = this.svgContainer.current,\n            planets = ref.querySelectorAll(`circle:not(.${startNode}):not(.${endNode})`),\n            lanes = ref.querySelectorAll(\"line\");\n\n        planets.forEach(el => el.setAttribute(\"opacity\", \".1\"));\n        lanes.forEach(el => el.setAttribute(\"opacity\", \".05\"));\n\n        this.pushNode({label: `Total Cost: ${cost}`});\n        this.pushNode(nodes[path[0]]);\n\n        for (let i = 1; i < path.length; i++) {\n            //ToDo change setTimeout to requestAnimationFrame\n            setTimeout(() => {\n                let planet = ref.querySelector(`[data-id=\"${path[i]}\"] circle`),\n                    //label = ref.querySelector(`[data-id=\"${path[i]}\"] text`),\n\n                    //Daten liegen als gerichteter Graph vor\n                    lane = ref.querySelector(`[data-source=\"${path[i - 1]}\"][data-target=\"${path[i]}\"]`)\n                        || ref.querySelector(`[data-source=\"${path[i]}\"][data-target=\"${path[i - 1]}\"]`);\n\n                planet.setAttribute(\"opacity\", \"1\");\n                if (i < path.length - 1) { planet.setAttribute(\"r\", \"3\"); }\n                lane.setAttribute(\"opacity\", \"1\");\n                lane.setAttribute(\"stroke-width\", \".5\");\n\n                this.pushNode(nodes[path[i]]);\n\n            }, i * 500);\n        }\n\n        console.log(\"timer: \", timer);\n        console.log(\"path: \", path)\n        console.log(\"cost: \", cost)\n    }\n\n    drawChart(data, container, steps) {\n\n        function zoomed() {\n            const currentTransform = d3.event.transform;\n            svg.attr(\"transform\", currentTransform);\n            // slider.property(\"value\", currentTransform.k);\n        }\n        function slided(d) {\n            console.log(\"zoom\")\n            zoom.scaleTo(svg, d3.select(this).property(\"value\"));\n        }\n\n        var zoom = d3.zoom()\n            .scaleExtent([1, 10])\n            .on(\"zoom\", zoomed);\n\n        const { width, height } = container.getBoundingClientRect();\n        const svg = d3.select(container)\n            .append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .attr(\"id\", \"starmap\");\n        // .call(zoom);\n\n        const edges = data.edges.map(d => Object.create(d));\n        const nodes = data.nodes.map(d => Object.create(d));\n\n        const simulation = d3.forceSimulation(nodes)\n            .force(\"link\", d3.forceLink(edges).distance(10))\n            .force(\"charge\", d3.forceManyBody().strength(-2))\n            .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n        const link = svg.append(\"g\")\n            .selectAll(\"line\")\n            .data(edges)\n            .join(\"line\");\n\n        const node = svg.append(\"g\")\n            .selectAll(\"g\")\n            .data(nodes)\n            .enter().append(\"g\")\n\n        const circle = node.append(\"circle\");\n\n        const label = node.append(\"text\")\n            .text(d => `*${d.label}*`)\n            .attr('x', 6)\n            .attr('y', 3)\n            .attr(\"fill\", d => {\n                switch (d.label) {\n                    case startNode:\n                        return startNodeColor;\n                    case endNode:\n                        return endNodeColor;\n                    default:\n                        return null;\n                }\n            })\n            .attr(\"opacity\", d => {\n                switch (d.label) {\n                    case startNode:\n                        return 1;\n                    case endNode:\n                        return 1;\n                    default:\n                        return 0;\n                }\n            });\n\n        let step = 0;\n\n        simulation.on(\"tick\", () => {\n            link\n                .attr(\"x1\", d => d.source.x)\n                .attr(\"y1\", d => d.source.y)\n                .attr(\"x2\", d => d.target.x)\n                .attr(\"y2\", d => d.target.y);\n\n            node\n                .attr(\"transform\", function (d) {\n                    return \"translate(\" + d.x + \",\" + d.y + \")\";\n                });\n\n            step++;\n\n            if (step >= steps) {\n                simulation.stop();\n\n                // workaround: add visual effects only after simulation has stopped\n                link\n                    .attr(\"opacity\", 0.1)\n                    .attr(\"stroke-width\", d => +d.cost / 2)\n                    .attr(\"stroke\", d => d3.interpolateRdYlGn(1 - +d.cost))\n                    .attr(\"data-source\", d => d.source.index)\n                    .attr(\"data-target\", d => d.target.index);\n\n                node\n                    .attr(\"data-id\", (d, i) => `${i}`)\n\n                circle\n                    .attr(\"r\", d => {\n                        switch (d.label) {\n                            case startNode:\n                                return 5;\n                            case endNode:\n                                return 5;\n                            default:\n                                return Math.random() * 3;\n                        }\n                    })\n                    .attr(\"fill\", d => {\n                        switch (d.label) {\n                            case startNode:\n                                return startNodeColor;\n                            case endNode:\n                                return endNodeColor;\n                            default:\n                                return d3.interpolateOranges(Math.random());\n                        }\n                    })\n                    .attr(\"class\", d => {\n                        switch (d.label) {\n                            case startNode:\n                                return startNode;\n                            case endNode:\n                                return endNode;\n                            default:\n                                return null;\n                        }\n                    })\n                    .attr(\"opacity\", d => {\n                        switch (d.label) {\n                            case startNode:\n                                return 1;\n                            case endNode:\n                                return 1;\n                            default:\n                                return 0.3;\n                        }\n                    });\n            }\n        });\n    }\n\n    pushNode(node) {\n        appEmitter.emit('pushNode', node);\n    }\n\n    render() {\n        return <AppConsumer>{() => <div id={\"svgContainer\"} ref={this.svgContainer} style={{ height: \"100%\", width: \"100%\" }}>\n        </div>}</AppConsumer>;\n    }\n}\n\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        {context => <GraphComponent {...props} context={context} ref={ref} />}\n    </AppConsumer>\n));","import React from \"react\"\n\nimport GraphComponent from \"./graph\"\n\nconst Content = () => (\n  <content\n    style={{\n      // background: `#6C7595`,\n      background: `#1b1b1b`,\n      gridArea: \"content\"\n    }}\n  >\n    <GraphComponent></GraphComponent>\n  </content>\n)\n\nexport default Content\n","import React, { Component } from 'react';\nimport appEmitter from \"../helper/appEmitter\"\n\nlet Subscription = null;\n\nclass Footer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.startButton = React.createRef();\n    this.startPathfinding = this.startPathfinding.bind(this);\n    this.state = { nodeArr: [] }\n  }\n\n  componentWillMount() {\n    Subscription = appEmitter.addListener('pushNode', (payload) => {\n\n      this.setState(prevState => ({\n        \"nodeArr\": [...prevState.nodeArr, payload]\n      }))\n\n      console.log(this.state.nodeArr)\n    });\n  }\n\n  componentWillUnmount() {\n    Subscription.remove();\n  }\n\n  startPathfinding() {\n    this.setState({ \"nodeArr\": [] });\n    appEmitter.emit('startButton', this.startButton);\n  }\n\n  render() {\n    //const { data } = this.props; // add more props here as needed\n    //\n    let planets = this.state.nodeArr.map((node, i) => {\n      return <li\n        key={i}>{node.label}</li>;\n    });\n\n    return <footer\n      style={{\n        alignItems: \"flex-end\",\n        background: `#1b1b1b`,\n        borderTop: \"5px solid #6EAB1B\",\n        color: `#6EAB1B`,\n        display: \"flex\",\n        fontFamily: 'Orbitron',\n        gridArea: \"footer\",\n        padding: \"20px\"\n      }}\n    >\n      <button ref={this.startButton} className=\"button\" onClick={this.startPathfinding}>\n        Go!\n    </button>\n      <ul className=\"planetList\">\n        {planets}\n      </ul>\n    </footer>\n  }\n}\n\n\nexport default Footer\n\n/*\n<i className=\"material-icons\">zoom_in</i>\n      <i className=\"material-icons\">zoom_out_map</i>\n      <i className=\"material-icons\">zoom_out</i>\n\n*/","import React, { Component } from 'react';\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"../components/header.jsx\"\nimport Content from \"../components/content.jsx\"\nimport Footer from \"../components/footer.jsx\"\n\nimport { AppProvider } from \"../data/store\"\n\nimport \"./layout.css\"\n\nclass IndexPage extends Component {\n  //state = { name: 'Spyna' } { data } = this.props\n  render() {\n    const { data } = this.props; // add more props here as needed\n    console.log(data)\n    return (\n      <AppProvider value={data}>\n        <div id=\"App\">\n          <Header></Header>\n          <Content></Content>\n          <Footer></Footer>\n        </div>\n      </AppProvider>\n    )\n  }\n}\n//export default IndexPage\n\nexport default props => (\n  <StaticQuery\n    query={\n      graphql`\n      query {\n          dataJson {\n              nodes {\n                  label\n              }\n              edges {\n                  source\n                  target\n                  cost  \n              }\n          }\n      }`\n    }\n    render={data => <IndexPage data={data} {...props} />}\n  />\n);\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}