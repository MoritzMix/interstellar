{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/data/store.js","webpack:///./src/components/header.jsx","webpack:///./src/helper/appEmitter.js","webpack:///./src/functions/dijkstra.js","webpack:///./src/components/graph.jsx","webpack:///./src/components/content.jsx","webpack:///./src/components/footer.jsx","webpack:///./src/pages/index.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","react_default","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","AppContext","AppProvider","Provider","AppConsumer","Header","_ref","siteTitle","style","alignItems","background","borderBottom","color","display","fontFamily","gridArea","padding","margin","fontSize","marginLeft","defaultProps","appEmitter","EventEmitter","Graph","this","nodes","adjacencyList","addNode","node","push","index","addEdge","source","target","cost","weight","addNodes","nodeArr","_this","forEach","i","label","addEdges","edgeArr","_this2","edge","Subscription","endNode","GraphComponent","_Component","call","svgContainer","createRef","context","componentWillMount","addListener","payload","drawPath","console","log","componentDidMount","container","current","drawChart","dataJson","componentWillUnmount","remove","edges","start","getPlanetByLabel","end","timer","Date","getTime","map","arr","findIndex","Object","assign","_findPath","startNode","times","backtrace","pq","PriorityQueue","collection","_proto2","prototype","enqueue","element","isEmpty","added","length","splice","dequeue","shift","Infinity","_loop","currentNode","neighbor","time","path","lastStep","unshift","findPath","ref","planets","querySelectorAll","lanes","el","setAttribute","setTimeout","planet","querySelector","lane","steps","d3","scaleExtent","on","currentTransform","transform","svg","attr","_container$getBoundin","getBoundingClientRect","width","height","append","d","create","simulation","force","distance","strength","link","selectAll","join","enter","circle","step","text","x","y","stop","Math","random","_this3","id","Component","forwardRef","graph_GraphComponent","Content","graph","Footer","startButton","startPathfinding","bind","assertThisInitialized_default","e","emit","borderTop","className","onClick","IndexPage","value","header","content","footer","__webpack_exports__","gatsby_browser_entry_StaticQuery","pages_IndexPage","_1909683104","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape"],"mappings":"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","file":"component---src-pages-index-jsx-21ccc29ff59982b3e323.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\";\n\nconst AppContext = React.createContext({});\n\nexport const AppProvider = AppContext.Provider;\nexport const AppConsumer = AppContext.Consumer;","import PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport AppConsumer from \"../data/store\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      alignItems: \"flex-end\",\n      background: `#1b1b1b`,\n      borderBottom: \"5px solid #6EAB1B\",\n      color: `#6EAB1B`,\n      display: \"flex\",\n      fontFamily: 'Orbitron',\n      gridArea: \"header\",\n      padding: \"20px\"\n    }}\n  >\n      <h1 style={{ margin: 0 ,fontSize: \"50px\"}}>\n       Interstellar\n      </h1>\n      <p style={{\n      marginLeft: \"10px\"\n    }}>von Moritz Mix</p>\n    \n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import { EventEmitter } from 'fbemitter'\n\nconst appEmitter = new EventEmitter()\n\nexport default appEmitter","\n\n//map.addNode(\"Insomnia Cookies\");\n//map.addEdge(\"Fullstack\", \"Starbucks\", 6);\n\n/*\n\nGraph.nodes[Graph.edges[i].source] \n Graph.nodes[Graph.edges[i].target] \n Graph.edges[i].cost \n\n*/\n\n//node = {label: \"Erde\"}\n//edge = {cost: , source: index, target: index}\n\nclass Graph {\n    constructor() {\n        this.nodes = [];\n        this.adjacencyList = {};\n    }\n    addNode(node) {\n        this.nodes.push(node);\n        this.adjacencyList[node.index] = [];\n    }\n    addEdge(source, target, cost) {\n        this.adjacencyList[source].push({ node: target, weight: cost });\n        this.adjacencyList[target].push({ node: source, weight: cost });\n    }\n\n    addNodes(nodeArr) {\n        nodeArr.forEach((node, i) => this.addNode({ label: node.label, index: i }))\n    }\n    addEdges(edgeArr) {\n        edgeArr.forEach(edge => this.addEdge(edge.source, edge.target, edge.cost))\n    }\n}\n\nfunction findPath(map, startNode, endNode, timer) {\n\n    class PriorityQueue {\n        constructor() {\n            this.collection = [];\n        }\n        enqueue(element) {\n            if (this.isEmpty()) {\n                this.collection.push(element);\n            } else {\n                let added = false;\n                for (let i = 1; i <= this.collection.length; i++) {\n                    if (element[1] < this.collection[i - 1][1]) {\n                        this.collection.splice(i - 1, 0, element);\n                        added = true;\n                        break;\n                    }\n                }\n                if (!added) {\n                    this.collection.push(element);\n                }\n            }\n        };\n\n        dequeue() {\n            return this.collection.shift();\n        };\n        isEmpty() {\n            return (this.collection.length === 0)\n        };\n    }\n\n    let times = {};\n    let backtrace = {};\n    let pq = new PriorityQueue();\n\n    times[startNode.index] = 0;\n\n    map.nodes.forEach(node => {\n        if (node.label !== startNode.label) {\n            times[node.index] = Infinity\n        }\n    });\n\n    pq.enqueue([startNode.index, 0]);\n\n    while (!pq.isEmpty()) {\n\n        let shortestStep = pq.dequeue();\n        let currentNode = shortestStep[0];\n\n        //console.log(JSON.parse(JSON.stringify(shortestStep)))\n\n        map.adjacencyList[currentNode].forEach(neighbor => {\n\n            let time = times[currentNode] + neighbor.weight;\n            if (time < times[neighbor.node]) {\n\n                times[neighbor.node] = time;\n                backtrace[neighbor.node] = currentNode;\n                //  console.log('+'+currentNode)\n                //console.log(JSON.parse(JSON.stringify(backtrace)))\n                pq.enqueue([neighbor.node, time]);\n            }\n        });\n    }\n\n    let path = [endNode.index];\n    let lastStep = endNode.index;\n    while (lastStep !== startNode.index) {\n\n        path.unshift(backtrace[lastStep])\n        lastStep = backtrace[lastStep]\n    }\n    console.log(new Date().getTime() - timer)\n    return { path: path, cost: times[endNode.index] };\n}\n\nexport { Graph, findPath };","import React, { Component, useContext } from 'react';\n\nimport * as d3 from \"d3\";\n\nimport { AppConsumer } from \"../data/store\"\nimport appEmitter from \"../helper/appEmitter\"\nimport { Graph, findPath } from \"../functions/dijkstra\"\n\nlet Subscription = null;\n\nconst startNode = \"Erde\";\nconst endNode = \"b3-r7-r4nd7\";\nconst startNodeColor = \"#313B74\";\nconst endNodeColor = \"#479030\";\n\nclass GraphComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.svgContainer = React.createRef();\n        this.data = this.context;\n    }\n\n    componentWillMount() {\n        Subscription = appEmitter.addListener('startButton', (payload) => {\n            this.drawPath();\n            console.log(payload)\n        });\n    }\n\n    componentDidMount() {\n        const data = this.props.context;\n        let container = this.svgContainer.current\n        this.drawChart(data.dataJson, container, 1);\n\n        console.log(\"context\",this.props.context)\n    }\n\n    componentWillUnmount() {\n        Subscription.remove();\n    }\n    \n        drawPath() {\n            const data = this.props.context;\n    \n            let nodes = data.dataJson.nodes,\n                edges = data.dataJson.edges,\n                start = getPlanetByLabel(nodes, startNode),\n                end = getPlanetByLabel(nodes, endNode),\n                timer = new Date().getTime(),\n                map = new Graph(),\n                steps = 60 / 300;   // 60fps, 0.3s\n    \n            function getPlanetByLabel(arr, label) {\n                let index = arr.findIndex(node => node.label === label);\n                return Object.assign({ index: index }, arr[index]);\n            }\n    \n            map.addNodes(nodes);\n            map.addEdges(edges)\n    \n            let { path, cost } = findPath(map, start, end, timer);\n    \n            let ref = this.svgContainer.current,\n                planets = ref.querySelectorAll(`circle:not(.${startNode}):not(.${endNode})`),\n                lanes = ref.querySelectorAll(\"line\");\n    \n            planets.forEach(el => el.setAttribute(\"opacity\", \".1\"));\n            lanes.forEach(el => el.setAttribute(\"opacity\", \".05\"));\n    \n            for (let i = 1; i < path.length; i++) {\n                //ToDo change setTimeout to requestAnimationFrame\n                setTimeout(() => {\n                    let planet = ref.querySelector(`[data-id=\"${path[i]}\"] circle`),\n                        label = ref.querySelector(`[data-id=\"${path[i]}\"] text`),\n    \n                        //Daten liegen als gerichteter Graph vor\n                        lane = ref.querySelector(`[data-source=\"${path[i - 1]}\"][data-target=\"${path[i]}\"]`)\n                            || ref.querySelector(`[data-source=\"${path[i]}\"][data-target=\"${path[i - 1]}\"]`);\n    \n                    planet.setAttribute(\"opacity\", \"1\");\n                    planet.setAttribute(\"r\", \"3\");\n                    lane.setAttribute(\"opacity\", \"1\");\n                    lane.setAttribute(\"stroke-width\", \".5\");\n                }, i * 500);\n            }\n    \n            console.log(\"timer: \", timer);\n            console.log(\"path: \", path)\n        }\n    \n        drawChart(data, container, steps) {\n    \n            function zoomed() {\n                const currentTransform = d3.event.transform;\n                svg.attr(\"transform\", currentTransform);\n                // slider.property(\"value\", currentTransform.k);\n            }\n            function slided(d) {\n                console.log(\"zoom\")\n                zoom.scaleTo(svg, d3.select(this).property(\"value\"));\n            }\n    \n            var zoom = d3.zoom()\n                .scaleExtent([1, 10])\n                .on(\"zoom\", zoomed);\n    \n            const { width, height } = container.getBoundingClientRect();\n            const svg = d3.select(container)\n                .append(\"svg\")\n                .attr(\"width\", width)\n                .attr(\"height\", height)\n                .attr(\"id\", \"starmap\");\n            // .call(zoom);\n    \n            const edges = data.edges.map(d => Object.create(d));\n            const nodes = data.nodes.map(d => Object.create(d));\n    \n            const simulation = d3.forceSimulation(nodes)\n                .force(\"link\", d3.forceLink(edges).distance(10))\n                .force(\"charge\", d3.forceManyBody().strength(-2))\n                .force(\"center\", d3.forceCenter(width / 2, height / 2));\n    \n            const link = svg.append(\"g\")\n                .selectAll(\"line\")\n                .data(edges)\n                .join(\"line\");\n    \n            const node = svg.append(\"g\")\n                .selectAll(\"g\")\n                .data(nodes)\n                .enter().append(\"g\")\n    \n            const circle = node.append(\"circle\");\n    \n            const label = node.append(\"text\")\n                .text(d => `*${d.label}*`)\n                .attr('x', 6)\n                .attr('y', 3)\n                .attr(\"fill\", d => {\n                    switch (d.label) {\n                        case startNode:\n                            return startNodeColor;\n                        case endNode:\n                            return endNodeColor;\n                        default:\n                            return null;\n                    }\n                })\n                .attr(\"opacity\", d => {\n                    switch (d.label) {\n                        case startNode:\n                            return 1;\n                        case endNode:\n                            return 1;\n                        default:\n                            return 0;\n                    }\n                });\n    \n            let step = 0;\n    \n            simulation.on(\"tick\", () => {\n                link\n                    .attr(\"x1\", d => d.source.x)\n                    .attr(\"y1\", d => d.source.y)\n                    .attr(\"x2\", d => d.target.x)\n                    .attr(\"y2\", d => d.target.y);\n    \n                node\n                    .attr(\"transform\", function (d) {\n                        return \"translate(\" + d.x + \",\" + d.y + \")\";\n                    });\n    \n                step++;\n    \n                if (step >= steps) {\n                    simulation.stop();\n    \n                    // workaround: add visual effects only after simulation has stopped\n                    link\n                        .attr(\"opacity\", 0.1)\n                        .attr(\"stroke-width\", d => +d.cost / 2)\n                        .attr(\"stroke\", d => d3.interpolateRdYlGn(1 - +d.cost))\n                        .attr(\"data-source\", d => d.source.index)\n                        .attr(\"data-target\", d => d.target.index);\n    \n                    node\n                        .attr(\"data-id\", (d, i) => `${i}`)\n    \n                    circle\n                        .attr(\"r\", d => {\n                            switch (d.label) {\n                                case startNode:\n                                    return 5;\n                                case endNode:\n                                    return 5;\n                                default:\n                                    return Math.random() * 3;\n                            }\n                        })\n                        .attr(\"fill\", d => {\n                            switch (d.label) {\n                                case startNode:\n                                    return startNodeColor;\n                                case endNode:\n                                    return endNodeColor;\n                                default:\n                                    return d3.interpolateOranges(Math.random());\n                            }\n                        })\n                        .attr(\"class\", d => {\n                            switch (d.label) {\n                                case startNode:\n                                    return startNode;\n                                case endNode:\n                                    return endNode;\n                                default:\n                                    return null;\n                            }\n                        })\n                        .attr(\"opacity\", d => {\n                            switch (d.label) {\n                                case startNode:\n                                    return 1;\n                                case endNode:\n                                    return 1;\n                                default:\n                                    return 0.3;\n                            }\n                        });\n                }\n            });\n        }\n\n    render() {\n       // const { data } = this.props; // add more props here as needed\n       const { context } = this.props;\n\n        return <AppConsumer>{context => <div id={\"svgContainer\"} ref={this.svgContainer} style={{ height: \"100%\", width: \"100%\" }}>\n        </div>}</AppConsumer>;\n        //return <div id={\"svgContainer\"} ref={this.svgContainer} style={{ height: \"100%\", width: \"100%\" }}></div>\n    }\n}\n\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n      {context => <GraphComponent {...props} context={context} ref={ref} />}\n    </AppConsumer>\n  ));","import React from \"react\"\n\nimport GraphComponent from \"./graph\"\n\nconst Content = () => (\n  <content\n    style={{\n      // background: `#6C7595`,\n      background: `#1b1b1b`,\n      gridArea: \"content\"\n    }}\n  >\n    <GraphComponent></GraphComponent>\n  </content>\n)\n\nexport default Content\n","import React, { Component } from 'react';\nimport appEmitter from \"../helper/appEmitter\"\n\nclass Footer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.startButton = React.createRef();\n    this.startPathfinding = this.startPathfinding.bind(this);\n  }\n\n  startPathfinding(e) {\n    appEmitter.emit('startButton', this.startButton);\n    console.log('The link was clicked.');\n  }\n\n  render() {\n    //const { data } = this.props; // add more props here as needed\n    //\n    return <footer\n      style={{\n        alignItems: \"flex-end\",\n        background: `#1b1b1b`,\n        borderTop: \"5px solid #6EAB1B\",\n        color: `#6EAB1B`,\n        display: \"flex\",\n        fontFamily: 'Orbitron',\n        gridArea: \"footer\",\n        padding: \"20px\"\n      }}\n    >\n      <button ref={this.startButton} className=\"button\" onClick={this.startPathfinding}>\n        Loading\n    </button>\n\n\n    </footer>\n  }\n}\n\n\nexport default Footer\n\n/*\n<i className=\"material-icons\">zoom_in</i>\n      <i className=\"material-icons\">zoom_out_map</i>\n      <i className=\"material-icons\">zoom_out</i>\n\n*/","import React, { Component } from 'react';\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"../components/header.jsx\"\nimport Content from \"../components/content.jsx\"\nimport Footer from \"../components/footer.jsx\"\n\nimport { AppProvider } from \"../data/store\"\n\nimport \"./layout.css\"\n\nclass IndexPage extends Component {\n  //state = { name: 'Spyna' } { data } = this.props\n  render() {\n    const { data } = this.props; // add more props here as needed\n    console.log(data)\n    return (\n      <AppProvider value={data}>\n        <div id=\"App\">\n          <Header></Header>\n          <Content></Content>\n          <Footer></Footer>\n        </div>\n      </AppProvider>\n    )\n  }\n}\n//export default IndexPage\n\nexport default props => (\n  <StaticQuery\n    query={\n      graphql`\n      query {\n          dataJson {\n              nodes {\n                  label\n              }\n              edges {\n                  source\n                  target\n                  cost  \n              }\n          }\n      }`\n    }\n    render={data => <IndexPage data={data} {...props} />}\n  />\n);\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}