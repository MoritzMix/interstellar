{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/data/store.js","webpack:///./src/helper/appEmitter.js","webpack:///./src/components/header.jsx","webpack:///./src/functions/dijkstra.js","webpack:///./src/components/graph.jsx","webpack:///./src/components/content.jsx","webpack:///./src/components/footer.jsx","webpack:///./src/pages/index.jsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","react_default","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","AppContext","AppProvider","Provider","AppConsumer","appEmitter","EventEmitter","Header","_Component","call","this","changeEnd","node","console","log","emit","componentDidMount","context","_this","options","dataJson","nodes","style","alignItems","background","borderBottom","color","display","fontFamily","gridArea","padding","margin","fontSize","marginLeft","lib_default","key","values","label","onChange","Component","forwardRef","ref","header_Header","Object","assign","Graph","adjacencyList","addNode","push","index","addEdge","source","target","cost","weight","addNodes","nodeArr","forEach","i","addEdges","edgeArr","_this2","edge","Subscription","Subscription2","GraphComponent","svgContainer","createRef","state","startNode","endNode","componentWillMount","addListener","payload","drawPath","refs","_this3","container","current","drawChart","setState","endPlanetNode","document","querySelector","setAttribute","parentNode","componentWillUnmount","remove","_this4","edges","start","getPlanetByLabel","end","map","Date","getTime","arr","findIndex","_findPath","timer","times","backtrace","pq","PriorityQueue","collection","_proto2","prototype","enqueue","element","isEmpty","added","length","splice","dequeue","shift","Infinity","_loop","currentNode","neighbor","time","path","lastStep","unshift","findPath","planets","querySelectorAll","lanes","el","pushNode","toFixed","setTimeout","planet","lane","steps","_container$getBoundin","getBoundingClientRect","width","height","svg","d3","append","attr","d","create","simulation","force","distance","strength","link","selectAll","join","enter","circle","step","text","on","x","y","stop","Math","random","_this5","id","graph_GraphComponent","Content","graph","Footer","startButton","startPathfinding","bind","assertThisInitialized_default","prevState","concat","borderTop","className","onClick","IndexPage","value","header","content","footer","__webpack_exports__","gatsby_browser_entry_StaticQuery","pages_IndexPage","_1909683104","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape"],"mappings":"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","file":"component---src-pages-index-jsx-be75682f1c19d053a1e1.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\";\n\nconst AppContext = React.createContext({});\n\nexport const AppProvider = AppContext.Provider;\nexport const AppConsumer = AppContext.Consumer;","import { EventEmitter } from 'fbemitter'\n\nconst appEmitter = new EventEmitter()\n\nexport default appEmitter","import React, { Component } from 'react';\n\nimport Select from \"react-dropdown-select\";\n\nimport { AppConsumer } from \"../data/store\"\nimport appEmitter from \"../helper/appEmitter\"\n\nlet Subscription = null;\n\nclass Header extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  \n  changeEnd(node) {\n    console.log(\"emite\", node)\n    appEmitter.emit('changeEnd', node);\n  }\n\n  componentDidMount() {\n    const data = this.props.context;\n  }\n\n  render() {\n\n    let options = this.props.context.dataJson.nodes;\n\n    return <header\n      style={{\n        alignItems: \"flex-end\",\n        background: `#1b1b1b`,\n        borderBottom: \"5px solid #6EAB1B\",\n        color: `#6EAB1B`,\n        display: \"flex\",\n        fontFamily: 'Orbitron',\n        gridArea: \"header\",\n        padding: \"20px\"\n      }}\n    >\n      <h1 style={{ margin: 0, fontSize: \"50px\" }}>\n        Interstellar\n      </h1>\n      <p style={{\n        marginLeft: \"10px\"\n      }}>von Moritz Mix</p>\n      <Select \n      options={options} \n      key={options} \n      values={[{label: \"b3-r7-r4nd7\"}]}\n      onChange={(values) => this.changeEnd(values[0].label)} />\n    </header>\n  }\n}\n\n\nexport default React.forwardRef((props, ref) => (\n  <AppConsumer>\n    {context => <Header {...props} context={context} ref={ref} />}\n  </AppConsumer>\n));\n\n","\n\n//map.addNode(\"Insomnia Cookies\");\n//map.addEdge(\"Fullstack\", \"Starbucks\", 6);\n\n/*\n\nGraph.nodes[Graph.edges[i].source] \n Graph.nodes[Graph.edges[i].target] \n Graph.edges[i].cost \n\n*/\n\n//node = {label: \"Erde\"}\n//edge = {cost: , source: index, target: index}\n\nclass Graph {\n    constructor() {\n        this.nodes = [];\n        this.adjacencyList = {};\n    }\n    addNode(node) {\n        this.nodes.push(node);\n        this.adjacencyList[node.index] = [];\n    }\n    addEdge(source, target, cost) {\n        this.adjacencyList[source].push({ node: target, weight: cost });\n        this.adjacencyList[target].push({ node: source, weight: cost });\n    }\n\n    addNodes(nodeArr) {\n        nodeArr.forEach((node, i) => this.addNode({ label: node.label, index: i }))\n    }\n    addEdges(edgeArr) {\n        edgeArr.forEach(edge => this.addEdge(edge.source, edge.target, edge.cost))\n    }\n}\n\nfunction findPath(map, startNode, endNode, timer) {\n\n    class PriorityQueue {\n        constructor() {\n            this.collection = [];\n        }\n        enqueue(element) {\n            if (this.isEmpty()) {\n                this.collection.push(element);\n            } else {\n                let added = false;\n                for (let i = 1; i <= this.collection.length; i++) {\n                    if (element[1] < this.collection[i - 1][1]) {\n                        this.collection.splice(i - 1, 0, element);\n                        added = true;\n                        break;\n                    }\n                }\n                if (!added) {\n                    this.collection.push(element);\n                }\n            }\n        };\n\n        dequeue() {\n            return this.collection.shift();\n        };\n        isEmpty() {\n            return (this.collection.length === 0)\n        };\n    }\n\n    let times = {};\n    let backtrace = {};\n    let pq = new PriorityQueue();\n\n    times[startNode.index] = 0;\n\n    map.nodes.forEach(node => {\n        if (node.label !== startNode.label) {\n            times[node.index] = Infinity\n        }\n    });\n\n    pq.enqueue([startNode.index, 0]);\n\n    while (!pq.isEmpty()) {\n\n        let shortestStep = pq.dequeue();\n        let currentNode = shortestStep[0];\n\n        //console.log(JSON.parse(JSON.stringify(shortestStep)))\n\n        map.adjacencyList[currentNode].forEach(neighbor => {\n\n            let time = times[currentNode] + neighbor.weight;\n            if (time < times[neighbor.node]) {\n\n                times[neighbor.node] = time;\n                backtrace[neighbor.node] = currentNode;\n                //  console.log('+'+currentNode)\n                //console.log(JSON.parse(JSON.stringify(backtrace)))\n                pq.enqueue([neighbor.node, time]);\n            }\n        });\n    }\n\n    let path = [endNode.index];\n    let lastStep = endNode.index;\n    while (lastStep !== startNode.index) {\n\n        path.unshift(backtrace[lastStep])\n        lastStep = backtrace[lastStep]\n    }\n    return { path: path, cost: times[endNode.index] };\n}\n\nexport { Graph, findPath };","import React, { Component } from 'react';\n\nimport * as d3 from \"d3\";\n\nimport { AppConsumer } from \"../data/store\"\nimport appEmitter from \"../helper/appEmitter\"\nimport { Graph, findPath } from \"../functions/dijkstra\"\n\nlet Subscription = null;\nlet Subscription2 = null;\n\nconst startNodeColor = \"blue\";\nconst endNodeColor = \"#479030\";\n\nclass GraphComponent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.svgContainer = React.createRef();\n        this.state = {\n            startNode: \"Erde\",\n            endNode: \"b3-r7-r4nd7\"\n        }\n    }\n\n    componentWillMount() {\n        Subscription = appEmitter.addListener('startButton', (payload) => {\n            this.drawPath();\n        });\n        console.log(\"refs\", this.refs)\n    }\n\n    componentDidMount() {\n        const data = this.props.context;\n        let container = this.svgContainer.current\n        this.drawChart(data.dataJson, container, 1);\n\n\n        Subscription2 = appEmitter.addListener('changeEnd', (payload) => {\n            this.setState({ \"endNode\": payload });\n            let endPlanetNode = document.querySelector(`.${payload}`);\n\n\n\n\n            endPlanetNode.setAttribute(\"opacity\", 1);\n            endPlanetNode.setAttribute(\"r\", 5);\n            endPlanetNode.setAttribute(\"fill\", endNodeColor);\n\n            endPlanetNode.parentNode.querySelector(\"text\").setAttribute(\"opacity\", 1);\n            endPlanetNode.parentNode.querySelector(\"text\").setAttribute(\"fill\", endNodeColor);\n\n\n            document.querySelector(`:not(.Erde)`).setAttribute(\"opacity\", .1);\n            document.querySelector(`:not(Erde)`).setAttribute(\"r\", .1);\n            document.querySelector(`:not(.Erde)`).parentNode.querySelector(\"text\").setAttribute(\"opacity\", 0);\n        });\n\n    }\n\n    componentWillUnmount() {\n        Subscription.remove();\n        Subscription2.remove();\n    }\n\n    drawPath() {\n        const data = this.props.context;\n\n        console.log(\"state\", this.state)\n        let nodes = data.dataJson.nodes,\n            edges = data.dataJson.edges,\n            startNode = this.state.startNode,\n            endNode = this.state.endNode || \"b3-r7-r4nd7\",\n\n            start = getPlanetByLabel(nodes, startNode),\n            end = getPlanetByLabel(nodes, endNode),\n            timer = new Date().getTime(),\n            map = new Graph(),\n            steps = 60 / 300;   // 60fps, 0.3s\n\n\n        function getPlanetByLabel(arr, label) {\n            let index = arr.findIndex(node => node.label === label);\n            return Object.assign({ index: index }, arr[index]);\n        }\n\n        map.addNodes(nodes);\n        map.addEdges(edges)\n\n        let { path, cost } = findPath(map, start, end, timer);\n\n        let ref = this.svgContainer.current,\n            planets = ref.querySelectorAll(`circle:not(.${startNode}):not(.${endNode})`),\n            lanes = ref.querySelectorAll(\"line\");\n\n\n\n        planets.forEach(el => el.setAttribute(\"opacity\", \".1\"));\n        lanes.forEach(el => el.setAttribute(\"opacity\", \".05\"));\n\n        this.pushNode({ label: `Total Cost: ${cost.toFixed(4)}` });\n        this.pushNode(nodes[path[0]]);\n\n        for (let i = 1; i < path.length; i++) {\n            /*\n                        var iterationCount = 0;\n                        var repeater;\n            \n                        function animate() {\n                            easing = easeInQuad(iterationCount, 0, width, 300);\n                            lok.setAttribute('style', 'left: ' + easing + 'px');\n                            iterationCount++;\n            \n                            if (iterationCount > 250) {\n                                cancelAnimationFrame(repeater);\n                            } else {\n                                repeater = requestAnimationFrame(animate);\n                            }\n                        }\n            \n                        runlock();\n            */\n\n            //ToDo change setTimeout to requestAnimationFrame\n            setTimeout(() => {\n                let planet = ref.querySelector(`[data-id=\"${path[i]}\"] circle`),\n                    //label = ref.querySelector(`[data-id=\"${path[i]}\"] text`),\n\n                    //Daten liegen als gerichteter Graph vor\n                    lane = ref.querySelector(`[data-source=\"${path[i - 1]}\"][data-target=\"${path[i]}\"]`)\n                        || ref.querySelector(`[data-source=\"${path[i]}\"][data-target=\"${path[i - 1]}\"]`);\n\n                planet.setAttribute(\"opacity\", \"1\");\n                if (i < path.length - 1) { planet.setAttribute(\"r\", \"3\"); }\n                lane.setAttribute(\"opacity\", \"1\");\n                lane.setAttribute(\"stroke-width\", \".5\");\n\n                this.pushNode(nodes[path[i]]);\n\n            }, i * 500);\n        }\n    }\n\n    drawChart(data, container, steps) {\n\n        let startNode = this.state.startNode,\n            endNode = this.state.endNode || \"b3-r7-r4nd7\";\n\n        const { width, height } = container.getBoundingClientRect();\n        const svg = d3.select(container)\n            .append(\"svg\")\n            .attr(\"width\", width)\n            .attr(\"height\", height)\n            .attr(\"id\", \"starmap\");\n        // .call(zoom);\n\n        const edges = data.edges.map(d => Object.create(d));\n        const nodes = data.nodes.map(d => Object.create(d));\n\n        const simulation = d3.forceSimulation(nodes)\n            .force(\"link\", d3.forceLink(edges).distance(10))\n            .force(\"charge\", d3.forceManyBody().strength(-2))\n            .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n        const link = svg.append(\"g\")\n            .selectAll(\"line\")\n            .data(edges)\n            .join(\"line\");\n\n        const node = svg.append(\"g\")\n            .selectAll(\"g\")\n            .data(nodes)\n            .enter().append(\"g\")\n\n        const circle = node.append(\"circle\");\n\n        const label = node.append(\"text\")\n            .text(d => `*${d.label}*`)\n            .attr('x', 6)\n            .attr('y', 3)\n            .attr(\"fill\", d => {\n                switch (d.label) {\n                    case startNode:\n                        return startNodeColor;\n                    case endNode:\n                        return endNodeColor;\n                    default:\n                        return null;\n                }\n            })\n            .attr(\"opacity\", d => {\n                switch (d.label) {\n                    case startNode:\n                        return 1;\n                    case endNode:\n                        return 1;\n                    default:\n                        return 0;\n                }\n            });\n\n        let step = 0;\n\n        simulation.on(\"tick\", () => {\n            link\n                .attr(\"x1\", d => d.source.x)\n                .attr(\"y1\", d => d.source.y)\n                .attr(\"x2\", d => d.target.x)\n                .attr(\"y2\", d => d.target.y);\n\n            node\n                .attr(\"transform\", function (d) {\n                    return \"translate(\" + d.x + \",\" + d.y + \")\";\n                });\n\n            step++;\n\n            if (step >= steps) {\n                simulation.stop();\n\n                // workaround: add visual effects only after simulation has stopped\n                link\n                    .attr(\"opacity\", 0.1)\n                    .attr(\"stroke-width\", d => +d.cost / 2)\n                    .attr(\"stroke\", d => d3.interpolateRdYlGn(1 - +d.cost))\n                    .attr(\"data-source\", d => d.source.index)\n                    .attr(\"data-target\", d => d.target.index);\n\n                node\n                    .attr(\"data-id\", (d, i) => `${i}`)\n\n                circle\n                    .attr(\"r\", d => {\n                        switch (d.label) {\n                            case startNode:\n                                return 5;\n                            case endNode:\n                                return 5;\n                            default:\n                                return Math.random() * 3;\n                        }\n                    })\n                    .attr(\"fill\", d => {\n                        switch (d.label) {\n                            case startNode:\n                                return startNodeColor;\n                            case endNode:\n                                return endNodeColor;\n                            default:\n                                return d3.interpolateOranges(Math.random());\n                        }\n                    })\n                    .attr(\"class\", d => d.label)\n                    .attr(\"opacity\", d => {\n                        switch (d.label) {\n                            case startNode:\n                                return 1;\n                            default:\n                                return 0.3;\n                        }\n                    });\n            }\n        });\n    }\n\n    pushNode(node) {\n        appEmitter.emit('pushNode', node);\n    }\n\n    render() {\n        return <AppConsumer>{() => <div id={\"svgContainer\"} ref={this.svgContainer} style={{ height: \"100%\", width: \"100%\" }}>\n        </div>}</AppConsumer>;\n    }\n}\n\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        {context => <GraphComponent {...props} context={context} ref={ref} />}\n    </AppConsumer>\n));","import React from \"react\"\n\nimport GraphComponent from \"./graph\"\n\nconst Content = () => (\n  <content\n    style={{\n      // background: `#6C7595`,\n      background: `#1b1b1b`,\n      gridArea: \"content\"\n    }}\n  >\n    <GraphComponent></GraphComponent>\n  </content>\n)\n\nexport default Content\n","import React, { Component } from 'react';\nimport appEmitter from \"../helper/appEmitter\"\n\nlet Subscription = null;\n\nclass Footer extends Component {\n\n  constructor(props) {\n    super(props);\n    this.startButton = React.createRef();\n    this.startPathfinding = this.startPathfinding.bind(this);\n    this.state = { nodeArr: [] }\n  }\n\n  componentWillMount() {\n    Subscription = appEmitter.addListener('pushNode', (payload) => {\n      this.setState(prevState => ({\n        \"nodeArr\": [...prevState.nodeArr, payload]\n      }))\n    });\n  }\n\n  componentWillUnmount() {\n    Subscription.remove();\n  }\n\n  startPathfinding() {\n    this.setState({ \"nodeArr\": [] });\n    appEmitter.emit('startButton', this.startButton);\n  }\n\n  render() {\n    //const { data } = this.props; // add more props here as needed\n    //\n    let planets = this.state.nodeArr.map((node, i) => {\n      return <li\n        key={i}>{node.label}</li>;\n    });\n\n    return <footer\n      style={{\n        alignItems: \"flex-end\",\n        background: `#1b1b1b`,\n        borderTop: \"5px solid #6EAB1B\",\n        color: `#6EAB1B`,\n        display: \"flex\",\n        fontFamily: 'Orbitron',\n        gridArea: \"footer\",\n        padding: \"20px\"\n      }}\n    >\n      <button ref={this.startButton} className=\"button\" onClick={this.startPathfinding}>\n        Go!\n    </button>\n      <ul className=\"planetList\">\n        {planets}\n      </ul>\n    </footer>\n  }\n}\n\n\nexport default Footer\n\n/*\n<i className=\"material-icons\">zoom_in</i>\n      <i className=\"material-icons\">zoom_out_map</i>\n      <i className=\"material-icons\">zoom_out</i>\n\n*/","import React, { Component } from 'react';\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"../components/header.jsx\"\nimport Content from \"../components/content.jsx\"\nimport Footer from \"../components/footer.jsx\"\n\nimport { AppProvider } from \"../data/store\"\n\nimport \"./layout.css\"\n\nclass IndexPage extends Component {\n  //state = { name: 'Spyna' } { data } = this.props\n  render() {\n    const { data } = this.props; // add more props here as needed\n    return (\n      <AppProvider value={data}>\n        <div id=\"App\">\n          <Header></Header>\n          <Content></Content>\n          <Footer></Footer>\n        </div>\n      </AppProvider>\n    )\n  }\n}\n//export default IndexPage\n\nexport default props => (\n  <StaticQuery\n    query={\n      graphql`\n      query {\n          dataJson {\n              nodes {\n                  label\n              }\n              edges {\n                  source\n                  target\n                  cost  \n              }\n          }\n      }`\n    }\n    render={data => <IndexPage data={data} {...props} />}\n  />\n);\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}